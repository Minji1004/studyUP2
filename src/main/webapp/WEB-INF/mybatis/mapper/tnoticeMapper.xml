<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tnotice">

<sql id="where-list">
    <if test="condition=='all' ">
       (INSTR(subject, #{keyword}) &gt; 0
		    OR INSTR(content, #{keyword}) &gt; 0)
    </if>
    <if test="condition=='subject' ">
       INSTR(subject, #{keyword}) &gt; 0
    </if>
    <if test="condition=='content' ">
       INSTR(content, #{keyword}) &gt; 0
    </if>
    <if test="condition=='created' ">
       DATE_FORMAT(created, '%Y-%m-%d') = #{keyword}
    </if>
</sql>

<select id="maxNoticeNum" resultType="Integer">
	SELECT IFNULL(max(tnoticeNum), 0) FROM tnotice
</select>


<insert id="insertNotice" parameterType="com.sp.teacher.notice.TeacherNotice">
	INSERT INTO tnotice(tnoticeNum, tId, subject, content, noticeweather) 
	VALUES(#{tnoticeNum}, #{tId},#{subject},#{content},#{noticeweather})
</insert>

<insert id="updateNotice" parameterType="com.sp.teacher.notice.TeacherNotice">
	UPDATE tnotice SET subject = #{subject}, content = #{content}, noticeweather = #{noticeweather}
	WHERE tnoticeNum = #{tnoticeNum}
</insert>

<insert id="insertFile" parameterType="com.sp.teacher.notice.TeacherNotice">
	  INSERT INTO tnotice_file(tnoticeNum, saveFilename, originalFilename, fileSize) 
	  VALUES (#{tnoticeNum}, #{saveFilename}, #{originalFilename}, #{fileSize})
</insert>

<select id="dataCount" parameterType="map" resultType="Integer">
	SELECT ifnull(COUNT(*), 0) FROM tnotice
	 <where>
     	<if test="keyword != null and keyword !='' ">
     	    <include refid="where-list"/>
     	</if>
     	AND (tId = #{tId})
     </where>
</select>

<select id="listTNotice" parameterType="map" resultType="com.sp.teacher.notice.TeacherNotice">
		SELECT t.tnoticeNum, subject, hitCount, created, fileNum FROM tnotice t
		LEFT JOIN (select min(filenum) fileNum, tnoticeNum from tnotice_file group by tnoticeNum) f
		ON t.tnoticeNum = f.tnoticeNum
       <where>
	     	<if test="keyword != null and keyword !='' ">
	     	    <include refid="where-list"/>
	     	</if>
	     	AND (tId = #{tId})
	   </where>
       ORDER BY tnoticeNum DESC
       LIMIT #{start}, #{rows}
</select>

<select id="listNoticeTop" parameterType="map" resultType="com.sp.teacher.notice.TeacherNotice">
	select tnoticeNum, subject, hitCount, created from tnotice where noticeweather = 1 AND tId = #{tId}
	ORDER BY tnoticeNum DESC
</select>

<select id="readTeacherNotice" parameterType="Integer" resultType="com.sp.teacher.notice.TeacherNotice">
	SELECT t.tnoticeNum, subject, hitCount, created, content, sum(fileSize) totalFileSize, noticeweather from tnotice t
		LEFT OUTER JOIN tnotice_file f
		ON t.tnoticeNum = f.tnoticeNum
		where t.tnoticeNum = #{tnoticeNum}
</select>

<update id="updateHitCount" parameterType="Integer">
	update tnotice SET hitCount = hitCount+1 WHERE tnoticeNum = #{tnoticeNum}
</update>

<select id="selectListFile" parameterType="Integer" resultType="com.sp.common.MyFile">
	select filenum AS fileNum, originalFilename, saveFilename, fileSize FROM tnotice_file where tnoticeNum = #{tnoticeNum}
</select>

<select id="preReadTNotice" parameterType="map" resultType="com.sp.teacher.notice.TeacherNotice">
	SELECT tnoticeNum, subject FROM tnotice
	<where>
		<if test="keyword !=null and keyword !='' ">
			<include refid="where-list"/>
		</if>
		AND (tnoticeNum &gt; #{tnoticeNum})
	</where>
	ORDER BY tnoticeNum ASC
	LIMIT 1
</select>	

<select id="nextReadTNotice" parameterType="map" resultType="com.sp.teacher.notice.TeacherNotice">
	SELECT tnoticeNum, subject FROM tnotice 
	<where>
		<if test="keyword !=null and keyword !='' ">
			<include refid="where-list"/>
		</if>
		AND (tnoticeNum &lt; #{tnoticeNum})
	</where>
	ORDER BY tnoticeNum DESC
	LIMIT 1
</select>	

<!-- 좋아요 -->
<select id="checkUserLikeNum" parameterType="map" resultType="Integer">
	SELECT IFNULL(COUNT(*),0) FROM tnotice_like WHERE userId = #{userId} AND tnoticeNum= #{tnoticeNum}
</select>

<select id="likeNumCount" parameterType="Integer" resultType="Integer">
	SELECT IFNULL(COUNT(*),0) FROM tnotice_like WHERE tnoticeNum= #{tnoticeNum}
</select>

<insert id="insertUserLikeNum" parameterType="map">
	INSERT INTO tnotice_like VALUES(#{tnoticeNum}, #{userId})
</insert>

<delete id="deleteUserLikeNum" parameterType="map">
	DELETE FROM tnotice_like WHERE userId = #{userId} AND tnoticeNum= #{tnoticeNum}
</delete>

<select id="readFile" parameterType="Integer" resultType="com.sp.common.MyFile">
	SELECT filenum AS fileNum, originalFilename, saveFilename, fileSize FROM tnotice_file where filenum = #{fileNum}
</select>


<!-- 댓글 -->
<insert id="insertReply" parameterType="com.sp.teacher.notice.Reply">
	INSERT INTO tnotice_r (tnoticeNum, userId, content) VALUES (#{tnoticeNum}, #{userId}, #{content})
 </insert>
 
 <select id="replyCount" parameterType="map" resultType="Integer">
 	SELECT IFNULL(COUNT(*),0) FROM tnotice_r WHERE tnoticeNum = #{tnoticeNum} AND answer = 0
 </select>
 
 <select id="listReply" parameterType="map" resultType="com.sp.teacher.notice.Reply">
 SELECT tnotice_r.userId, tnotice_r_num, answer, tnoticeNum, content, tnotice_r.created, nickname, picture 
			FROM tnotice_r
			JOIN memberinfo 
			ON tnotice_r.userId = memberinfo.userId
			WHERE tnoticeNum = #{tnoticeNum} AND answer = 0
			ORDER BY tnotice_r_num DESC
			LIMIT #{start}, #{rows}
 </select>
 
 <select id="answerCount" parameterType="map" resultType="Integer">
 	SELECT ifnull(COUNT(*), 0) answerCount FROM tnotice_r WHERE answer = #{tnotice_r_num}
 </select>
 
 <insert id="insertReplyAnswer" parameterType="com.sp.teacher.notice.Reply">
	INSERT INTO tnotice_r (tnoticeNum, userId, content, answer) VALUES (#{tnoticeNum}, #{userId}, #{content}, #{tnotice_r_num})
 </insert>
 
 <select id="listAnswerReply" parameterType="Integer" resultType="com.sp.teacher.notice.Reply">
	SELECT tnotice_r.userId, tnotice_r_num, answer, tnoticeNum, content, tnotice_r.created, nickname, picture 
			FROM tnotice_r
			JOIN memberinfo 
			ON tnotice_r.userId = memberinfo.userId
			WHERE answer = #{tnotice_r_num}
			ORDER BY tnotice_r_num DESC
 </select>
 
 <delete id="deleteReply" parameterType="Integer">
 	delete from tnotice_r where tnotice_r_num =  #{tnotice_r_num} OR answer =  #{tnotice_r_num}
 </delete>
 
 <update id="updateReply" parameterType="com.sp.teacher.notice.Reply">
 	update tnotice_r set content = #{content} WHERE tnotice_r_num = #{tnotice_r_num} AND answer = #{answer};
 </update>
 
 <delete id="deleteFile" parameterType="Integer">
 	delete from tnotice_file where fileNum = #{fileNum}
 </delete>
 
 <delete id="deleteAllFile"  parameterType="Integer">
 	delete from tnotice_file where tnoticeNum = #{tnoticeNum}
 </delete>
 
 <delete id="deleteAllReply" parameterType="Integer">
 	delete from tnotice_r where tnoticeNum = #{tnoticeNum}
 </delete>
 
 <delete id="deleteLikeNum" parameterType="Integer">
 	delete from tnotice_like where tnoticeNum = #{tnoticeNum}
 </delete>
 
  <delete id="deleteNotice" parameterType="Integer">
 	delete from tnotice where tnoticeNum = #{tnoticeNum}
 </delete>
 
</mapper>