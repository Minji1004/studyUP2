<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="admin">
<!-- report Mapper -->
	<insert id="insertReport" parameterType="com.sp.admin.black.Report">
		INSERT INTO report(reportBoard, reportBoardNum, replNum, reportUser, reportedUser, reportCause, reportType)
		VALUES(#{reportBoard}, #{reportBoardNum}, #{reportBoardNum}, #{replNum}, #{reportUser}, #{reportedUser}, #{reportCause}, #{reportType})	
	</insert>
	
	<sql id="report-list">
			(INSTR(reportBoard, #{keyword}) &gt; 0				
				OR INSTR(reportUser, #{keyword}) &gt; 0
				OR INSTR(reportUserNickName, #{keyword}) &gt; 0
				OR INSTR(reportedUser, #{keyword}) &gt; 0
				OR INSTR(reportedNickName, #{keyword}) &gt; 0)				
	</sql>	
	
	<select id="dataReportCount" parameterType="map" resultType="Integer">
		SELECT IFNULL(COUNT(*),0) FROM 
		(       
	      SELECT R1.reportNum, R1.reportBoard, R1.reportBoardNum, R1.replNum, R1.reportUser, R1.reportType, R1.reportDate, M1.userId reportUserId, M1.nickName reportUserNickName
	       FROM report AS R1
	       JOIN memberInfo AS M1
	       ON R1.reportUser = M1.userNum
		) AS A
		JOIN 
		(       
	      SELECT R1.reportNum, R1.reportedUser, M1.userId reportedUserId, M1.nickName reportedNickName
	       FROM report AS R1
	       JOIN memberInfo AS M1
	       ON R1.reportedUser = M1.userNum   
		) AS B
		ON A.reportNum = B.reportNum
		<where>
		<if test="keyword!=null and keyword!=''">
			<include refid="report-list"/>
		</if>
	</where>
	</select>
	
	<select id="listReport" parameterType="map" resultType="com.sp.admin.black.Report">
	select A.reportNum, A.reportUser, A.reportType, A.reportDate, A.reportUserId, A.reportUserNickName,
       B.reportedUser, B.reportedUserId, B.reportedNickName
	from 
	(       
      SELECT R1.reportNum, R1.reportBoard, R1.reportBoardNum, R1.replNum, R1.reportUser, R1.reportType, R1.reportDate, M1.userId reportUserId, M1.nickName reportUserNickName
       FROM report AS R1
       JOIN memberInfo AS M1
       ON R1.reportUser = M1.userNum
	) AS A
	JOIN 
	(       
      SELECT R1.reportNum, R1.reportedUser, M1.userId reportedUserId, M1.nickName reportedNickName
       FROM report AS R1
       JOIN memberInfo AS M1
       ON R1.reportedUser = M1.userNum   
	) AS B
	ON A.reportNum = B.reportNum
	<where>
		<if test="keyword!=null and keyword!=''">
			<include refid="report-list"/>
		</if>
	</where>	
	ORDER BY A.reportNum DESC
	LIMIT #{start}, #{rows}
	</select>
	
	<select id="readReport" parameterType="map" resultType="com.sp.admin.black.Report">
	select A.reportNum, A.reportBoard, A.reportBoardNum, A.replNum, A.reportUser, A.reportCause, A.reportType, A.reportDate, A.reportUserId, A.reportUserNickName, A.tel,
       B.reportedUser, B.reportedUserId, B.reportedNickName
	from 
	(       
      SELECT R1.reportNum, R1.reportBoard, R1.reportBoardNum, R1.replNum, R1.reportUser, R1.reportCause, R1.reportType, R1.reportDate, M1.userId reportUserId, M1.nickName reportUserNickName, M1.tel
       FROM report AS R1
       JOIN memberInfo AS M1
       ON R1.reportUser = M1.userNum
	) AS A
	JOIN 
	(       
      SELECT R1.reportNum, R1.reportedUser, M1.userId reportedUserId, M1.nickName reportedNickName
       FROM report AS R1
       JOIN memberInfo AS M1
       ON R1.reportedUser = M1.userNum   
	) AS B
	ON A.reportNum = B.reportNum
	where A.reportNum=#{reportNum}
	</select>
	
	<select id="userCount" parameterType="Integer" resultType="Integer">
		SELECT IFNULL(COUNT(*),0) FROM report where reportedUser=#{reportedUser};
	</select>

<!-- member Mapper -->	
	<select id="readMember" parameterType="Integer" resultType="com.sp.admin.member.Member">
		SELECT userNum, userId, nickname, tel,
		created, lastLogin, picture
		FROM memberInfo
		WHERE userNum=#{userNum}
	</select>
	
	<sql id="member-list">
			(INSTR(userNum, #{keyword}) &gt; 0
				OR INSTR(userId, #{keyword}) &gt; 0				
				OR INSTR(nickname, #{keyword}) &gt; 0)			
				
	</sql>
	
	<select id="memberCount" parameterType="map" resultType="Integer">
		SELECT IFNULL(COUNT(*),0) FROM memberInfo
		<where>
			<if test="keyword!=null and keyword!=''">
				<include refid="member-list"/>
			</if>
		</where>
	</select>
	
	<select id="listMember" parameterType="map" resultType="com.sp.admin.member.Member">
		SELECT userNum, userId, nickname, created		
		FROM memberInfo
		<where>
			<if test="keyword!=null and keyword!=''">
				<include refid="member-list"/>
			</if>
		</where>
		ORDER BY userNum DESC
		LIMIT #{start}, #{rows}
	</select>
		
	<delete id="deleteMember">
		DELETE from memberInfo where userId=#{userId}
	</delete>
	
<!-- blacklist mapper -->
	<insert id="insertBlack" parameterType="com.sp.admin.black.Black">
		Insert into Black(blackUserNum) Values(#{blackUserNum})
	</insert>
	
	<sql id="black-list">
		(INSTR(blackUserNum, #{keyword}) &gt; 0)				
	</sql>	
	
	<select id="readBlack" parameterType="map" resultType="com.sp.admin.black.Black">
		Select b1.blackUserNum, b1.blackStart, m1.userId blackUserId, m1.userNickName blackNickName, b1.tel
		from Black b1
		join memberInfo as m1
		on b1.blackUserNum = m1.userNum
		<where>
		<if test="keyword!=null and keyword!=''">
			<include refid="black-list"/>
		</if>
		</where>
		ORDER BY b1.blackUserNum DESC
		LIMIT #{start}, #{rows}
	</select>
	
	<select id="listBlack" parameterType="map" resultType="com.sp.admin.black.Black">
		Select b1.blackUserNum, b1.blackStart, m1.userId blackUserId, m1.userNickName blackNickName
		from Black b1
		join memberInfo as m1
		on b1.blackUserNum = m1.userNum
		<where>
		<if test="keyword!=null and keyword!=''">
			<include refid="black-list"/>
		</if>
		</where>
		ORDER BY b1.blackUserNum DESC
		LIMIT #{first}, #{row}
	</select>

</mapper>